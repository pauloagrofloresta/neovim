-- Configura√ß√µes b√°sicas
vim.g.mapleader = " "

vim.o.hidden = true
vim.o.tabstop = 4
vim.o.shiftwidth = 4
vim.o.smarttab = true
vim.o.ignorecase = true
vim.o.smartcase = true
vim.o.termguicolors = true
vim.o.background = "dark"
vim.o.expandtab = true

vim.opt.list = true
vim.opt.listchars:append("space:.")
vim.opt.listchars:append("eol:‚Ü¥")
vim.opt.listchars:append("tab:‚Üí‚Üí")
vim.opt.listchars:append("trail:.")
vim.opt.ruler = true
vim.opt.encoding = "utf-8"
vim.opt.expandtab = true
vim.opt.termguicolors = true
vim.opt.cursorline = true
vim.opt.autoindent = true
vim.opt.smarttab = true
vim.opt.softtabstop = 4
vim.opt.tabstop = 4
vim.opt.shiftwidth = 4
vim.opt.mouse = "a" -- Habilita o uso do mouse
vim.opt.syntax = "on" -- Ativa a sintaxe
vim.opt.wrap = false -- Desativa quebra de linha
vim.opt.termguicolors = true -- Habilita cores verdadeiras no terminal

vim.wo.colorcolumn = "80"
vim.wo.relativenumber = false
vim.wo.number = true

-- Gerenciador de plugins (usando packer)
local ensure_packer = function()
  local fn = vim.fn
  local install_path = fn.stdpath('data')..'/site/pack/packer/start/packer.nvim'
  if fn.empty(fn.glob(install_path)) > 0 then
    fn.system({'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path})
    vim.cmd [[packadd packer.nvim]]
    return true
  end
  return false
end

local packer_bootstrap = ensure_packer()

require('packer').startup(function(use)
  use 'wbthomason/packer.nvim'

  use 'AlexvZyl/nordic.nvim'

  use {
    'neovim/nvim-lspconfig',
    'williamboman/mason.nvim',
    'williamboman/mason-lspconfig.nvim',
  }

  use 'hrsh7th/nvim-cmp'
  use 'hrsh7th/cmp-nvim-lsp'
  use 'hrsh7th/cmp-buffer'
  use 'hrsh7th/cmp-path'
  use("sheerun/vim-polyglot")
  use("lewis6991/gitsigns.nvim")
  use("sbdchd/vim-run")
  use("preservim/tagbar")
  use("RRethy/vim-illuminate")
  use("folke/twilight.nvim")
  use("editorconfig/editorconfig-vim")
  use("mhinz/vim-grepper")
  use("brooth/far.vim")
  use("nvim-lualine/lualine.nvim")
  use("olexsmir/gopher.nvim")
  use("catppuccin/nvim")
  use("windwp/nvim-autopairs")
  use("yanskun/gotests.nvim")
  use("fatih/vim-go")
  use("nvim-treesitter/nvim-treesitter")
  use("petertriho/nvim-scrollbar")
  use("maxandron/goplements.nvim")
  use("crusj/hierarchy-tree-go.nvim")
  use("mrcjkb/rustaceanvim")
  use("numToStr/Comment.nvim")
  use("olimorris/codecompanion.nvim")
  use("FabijanZulj/blame.nvim")
  use("nvim-telescope/telescope.nvim")
  use("nvim-lua/plenary.nvim")
  use("stevearc/conform.nvim")

  use 'mfussenegger/nvim-dap'
  use {
    'rcarriga/nvim-dap-ui',
    requires = {'nvim-neotest/nvim-nio'}
  }
  use {
    'nvim-tree/nvim-tree.lua',
    requires = {
      'nvim-tree/nvim-web-devicons',
    }
  }
  use 'leoluz/nvim-dap-go'
  use 'mfussenegger/nvim-dap-python'
  
  if packer_bootstrap then
    require('packer').sync()
  end
end)

vim.cmd([[colorscheme catppuccin-macchiato]])

require("nvim-tree").setup({
  sort = {
    sorter = "case_sensitive",
  },
  view = {
    width = 30,
  },
  renderer = {
    group_empty = true,
  },
  filters = {
    dotfiles = true,
  },
})

vim.api.nvim_create_autocmd({ "VimEnter" }, { callback = function()
  require("nvim-tree.api").tree.open()
end})


require("lualine").setup({
  options = {
    icons_enabled = true,
    theme = "catppuccin-mocha",
    component_separators = { left = "ÓÇ±", right = "ÓÇ≥" }, -- Separadores entre componentes
    section_separators = { left = "ÓÇ∞", right = "ÓÇ≤" }, -- Separadores entre se√ß√µes
    disabled_filetypes = {
      statusline = { "nvim-tree", "NvimTree", "NvimTree_1" }, -- Desabilitar Lualine em certos tipos de arquivo
      winbar = {}, -- Tipos de arquivo para desabilitar na winbar (vazia por padr√£o)
    },
    ignore_focus = {}, -- Buffers ignorados para atualiza√ß√£o da barra
    always_divide_middle = true, -- Dividir a barra ao meio, mesmo com poucos componentes
    globalstatus = false, -- Usar uma barra de status global (desabilitado por padr√£o)
    refresh = {
      statusline = 1000, -- Atualizar a barra de status a cada 1000ms
      tabline = 1000,    -- Atualizar a tabline a cada 1000ms
      winbar = 1000,     -- Atualizar a winbar a cada 1000ms
    },
  },
  sections = {
    -- Configura√ß√£o das se√ß√µes ativas da barra de status
    lualine_a = { "mode" }, -- Exibe o modo atual (normal, insert, etc.)
    lualine_b = { "branch", "diff", "diagnostics" }, -- Informa√ß√µes de Git e diagn√≥sticos
    lualine_c = { "filename" }, -- Nome do arquivo atual
    lualine_x = { "encoding", "fileformat", "filetype" }, -- Codifica√ß√£o, formato e tipo de arquivo
    lualine_y = { "progress" }, -- Progresso no arquivo (ex.: linha atual/total)
    lualine_z = { "location" }, -- Localiza√ß√£o do cursor (linha e coluna)
  },
  inactive_sections = {
    -- Configura√ß√£o das se√ß√µes inativas (quando o buffer n√£o est√° em foco)
    lualine_a = {}, -- Se√ß√£o vazia
    lualine_b = {}, -- Se√ß√£o vazia
    lualine_c = { "filename" }, -- Exibe apenas o nome do arquivo
    lualine_x = { "location" }, -- Exibe apenas a localiza√ß√£o do cursor
    lualine_y = {}, -- Se√ß√£o vazia
    lualine_z = {}, -- Se√ß√£o vazia
  },
  tabline = {}, -- Configura√ß√£o da tabline (vazia por padr√£o)
  winbar = {}, -- Configura√ß√£o da winbar (vazia por padr√£o)
  inactive_winbar = {}, -- Configura√ß√£o da winbar inativa (vazia por padr√£o)
  extensions = {}, -- Extens√µes adicionais (vazia por padr√£o)
})

require("blame").setup()

require("codecompanion").setup({
    -- Op√ß√µes gerais
    opts = {
        language = "Portuguese", -- Idioma usado pelo LLM
    },

    -- Estrat√©gias de intera√ß√£o
    strategies = {
        chat = {
            adapter = "copilot", -- Adaptador para o modo de chat
        },
        inline = {
            adapter = "copilot", -- Adaptador para sugest√µes inline
            keymaps = {
                accept_change = {
                    modes = { n = "ga" }, -- Atalho para aceitar mudan√ßas
                    description = "Accept the suggested change",
                },
                reject_change = {
                    modes = { n = "gr" }, -- Atalho para rejeitar mudan√ßas
                    description = "Reject the suggested change",
                },
            },
        },
    },

    -- Configura√ß√µes de exibi√ß√£o
    display = {
        chat = {
            -- √çcones personalizados para o buffer de chat
            icons = {
                pinned_buffer = "Ôêµ ",
                watched_buffer = "üëÄ ",
            },
            -- Configura√ß√µes da janela de chat
            window = {
                layout = "vertical", -- Layout: float|vertical|horizontal|buffer
                position = "right",  -- Posi√ß√£o: left|right|top|bottom
                border = "single",   -- Estilo da borda
                height = 0.8,        -- Altura relativa
                width = 0.45,        -- Largura relativa
                relative = "editor", -- Relativo ao editor
                full_height = true,  -- Usa altura total (false usa vsplit)
                opts = {
                    breakindent = true, -- Indenta√ß√£o visual
                    cursorcolumn = false,
                    cursorline = false,
                    foldcolumn = "0",
                    linebreak = true,
                    list = false,
                    numberwidth = 1,
                    signcolumn = "no",
                    spell = false,
                    wrap = true, -- Quebra de linha habilitada
                },
            },
        },
        inline = {
            layout = "vertical", -- Layout para sugest√µes inline
        },
        action_palette = {
            width = 95,                     -- Largura da paleta de a√ß√µes
            height = 10,                    -- Altura da paleta de a√ß√µes
            prompt = "Prompt ",             -- Texto do prompt
            provider = "telescope",         -- Provedor: default|telescope|mini_pick
            opts = {
                show_default_actions = true,    -- Mostrar a√ß√µes padr√£o
                show_default_prompt_library = true, -- Mostrar biblioteca de prompts padr√£o
            },
        },
    },
})

require("Comment").setup()

require("conform").setup({
  -- Configura√ß√£o de formatadores por tipo de arquivo
  formatters_by_ft = {
    -- Para arquivos Lua, utiliza o formatador "stylua"
    lua = { "stylua" },

    -- Para arquivos Python, executa os formatadores "isort" e "black" em sequ√™ncia
    python = { "isort", "black" },

    -- Para arquivos Rust, utiliza "rustfmt" e um fallback para o formatador do LSP
    rust = { "rustfmt", lsp_format = "fallback" },

    -- Para arquivos JavaScript, tenta "prettierd" e "prettier", parando ap√≥s o primeiro dispon√≠vel
    javascript = { "prettierd", "prettier", stop_after_first = true },
  },
})

require("gitsigns").setup({
  -- Configura√ß√£o dos sinais visuais para mudan√ßas no Git
  signs = {
    add          = { text = "‚îÉ" }, -- Adi√ß√£o de linhas
    change       = { text = "‚îÉ" }, -- Altera√ß√£o de linhas
    delete       = { text = "‚óº" }, -- Exclus√£o de linhas
    topdelete    = { text = "‚óº" }, -- Exclus√£o de linhas no topo
    changedelete = { text = "‚îÉ" }, -- Altera√ß√£o e exclus√£o de linhas
    untracked    = { text = "‚îÉ" }, -- Linhas n√£o rastreadas
  },

  -- Configura√ß√µes gerais
  signcolumn = true,      -- Exibir sinais na coluna de sinais (toggle com `:Gitsigns toggle_signs`)
  numhl = true,           -- Real√ßar n√∫meros de linha (toggle com `:Gitsigns toggle_numhl`)
  linehl = true,         -- Real√ßar linhas inteiras (toggle com `:Gitsigns toggle_linehl`)
  word_diff = false,      -- Mostrar diferen√ßas por palavra (toggle com `:Gitsigns toggle_word_diff`)

  -- Monitoramento do diret√≥rio Git
  watch_gitdir = {
    interval = 2000,      -- Intervalo de atualiza√ß√£o em milissegundos
    follow_files = true,  -- Seguir arquivos movidos ou renomeados
  },

  -- Configura√ß√µes de anexa√ß√£o
  auto_attach = true,          -- Anexar automaticamente a novos buffers
  attach_to_untracked = true,  -- Anexar a arquivos n√£o rastreados

  -- Configura√ß√£o de blame (responsabilidade de linha)
  current_line_blame = true, -- Exibir blame na linha atual (toggle com `:Gitsigns toggle_current_line_blame`)
  current_line_blame_opts = {
    virt_text = true,         -- Exibir texto virtual
    virt_text_pos = "eol",    -- Posi√ß√£o do texto virtual: 'eol' | 'overlay' | 'right_align'
    delay = 300,              -- Atraso antes de exibir o blame
    ignore_whitespace = false,-- Ignorar mudan√ßas apenas de espa√ßos em branco
    virt_text_priority = 100, -- Prioridade do texto virtual
  },
  current_line_blame_formatter = "  <author>, <author_time:%Y-%m-%d> - <summary>", -- Formato do blame

  -- Outras configura√ß√µes
  sign_priority = 6,          -- Prioridade dos sinais
  update_debounce = 100,      -- Debounce para atualiza√ß√µes em milissegundos
  status_formatter = nil,     -- Usar o formatador padr√£o para status
  max_file_length = 40000,    -- Desabilitar para arquivos com mais de 40.000 linhas

  -- Configura√ß√£o da janela de visualiza√ß√£o
  preview_config = {
    border = "single",        -- Estilo da borda
    style = "minimal",        -- Estilo minimalista
    relative = "cursor",      -- Relativo ao cursor
    row = 0,                  -- Linha de in√≠cio
    col = 1,                  -- Coluna de in√≠cio
  },
})

require("nvim-autopairs").setup({
  -- Desabilitar o plugin em certos modos
  disable_in_macro = true,         -- Desabilitar durante a execu√ß√£o de macros
  disable_in_visualblock = false,  -- Permitir no modo visual block
  disable_in_replace_mode = true,  -- Desabilitar no modo replace

  -- Configura√ß√µes gerais
  enable_moveright = true,         -- Permitir mover para a direita ap√≥s inserir um par
  enable_afterquote = true,        -- Inserir pares ap√≥s aspas
  enable_check_bracket_line = true,-- Verificar se h√° pares na mesma linha
  enable_bracket_in_quote = true,  -- Permitir pares dentro de aspas
  enable_abbr = false,             -- Desabilitar abrevia√ß√µes autom√°ticas
  break_undo = true,               -- Quebrar a√ß√µes de desfazer em m√∫ltiplos passos

  -- Integra√ß√£o com Treesitter
  check_ts = false,                -- Desabilitar verifica√ß√£o com Treesitter

  -- Mapeamentos
  map_cr = true,                   -- Mapear <CR> para inserir pares automaticamente
  map_bs = true,                   -- Mapear <BS> para apagar pares automaticamente
  map_c_h = false,                 -- N√£o mapear <C-h> para apagar pares
  map_c_w = false,                 -- N√£o mapear <C-w> para apagar palavras
})

require("scrollbar").setup({
  -- Configura√ß√µes gerais
  show = true, -- Exibir a barra de rolagem
  show_in_active_only = false, -- Mostrar apenas em janelas ativas
  set_highlights = true, -- Configurar destaques automaticamente
  folds = 1000, -- Desabilitar em buffers com mais de 1000 linhas dobradas
  max_lines = false, -- Desabilitar em buffers com mais de um n√∫mero espec√≠fico de linhas (false = sem limite)
  hide_if_all_visible = false, -- Ocultar a barra se todas as linhas estiverem vis√≠veis
  throttle_ms = 100, -- Intervalo de atualiza√ß√£o em milissegundos

  -- Configura√ß√£o do "handle" (indicador principal da barra)
  handle = {
    text = " ", -- Texto exibido no handle
    blend = 30, -- Transpar√™ncia (0 = opaco, 100 = totalmente transparente)
    color = nil, -- Cor personalizada (opcional)
    color_nr = nil, -- Cor para terminais cterm (opcional)
    highlight = "CursorColumn", -- Destaque aplicado ao handle
    hide_if_all_visible = true, -- Ocultar o handle se todas as linhas estiverem vis√≠veis
  },

  -- Configura√ß√£o de marcas (marcadores na barra de rolagem)
  marks = {
    Cursor = {
      text = "‚óº", -- Indicador para a posi√ß√£o do cursor
      priority = 0, -- Prioridade mais baixa
      highlight = "Normal", -- Destaque aplicado
    },
    Search = {
      text = { "‚óº", "‚óº" }, -- Indicador para resultados de busca
      priority = 1,
      highlight = "Search",
    },
    Error = {
      text = { "‚óº", "‚óº" }, -- Indicador para erros
      priority = 2,
      highlight = "DiagnosticVirtualTextError",
    },
    Warn = {
      text = { "‚óº", "‚óº" }, -- Indicador para avisos
      priority = 3,
      highlight = "DiagnosticVirtualTextWarn",
    },
    Info = {
      text = { "‚óº", "‚óº" }, -- Indicador para informa√ß√µes
      priority = 4,
      highlight = "DiagnosticVirtualTextInfo",
    },
    Hint = {
      text = { "‚óº", "‚óº" }, -- Indicador para dicas
      priority = 5,
      highlight = "DiagnosticVirtualTextHint",
    },
    Misc = {
      text = { "‚óº", "‚óº" }, -- Indicador para outros tipos de mensagens
      priority = 6,
      highlight = "Normal",
    },
    GitAdd = {
      text = "‚óº", -- Indicador para adi√ß√µes no Git
      priority = 7,
      highlight = "GitSignsAdd",
    },
    GitChange = {
      text = "‚óº", -- Indicador para altera√ß√µes no Git
      priority = 7,
      highlight = "GitSignsChange",
    },
    GitDelete = {
      text = "‚óº", -- Indicador para exclus√µes no Git
      priority = 7,
      highlight = "GitSignsDelete",
    },
  },

  -- Buffers e tipos de arquivo exclu√≠dos
  excluded_buftypes = {
    "terminal", -- Excluir buffers do tipo terminal
  },
  excluded_filetypes = {
    "cmp_docs", -- Excluir buffers de documenta√ß√£o do cmp
    "cmp_menu", -- Excluir menus do cmp
    "noice", -- Excluir buffers do plugin Noice
    "prompt", -- Excluir buffers de prompt
    "TelescopePrompt", -- Excluir buffers do Telescope
  },

  -- Configura√ß√£o de eventos autom√°ticos
  autocmd = {
    render = {
      "BufWinEnter", -- Renderizar ao entrar em uma janela
      "TabEnter", -- Renderizar ao entrar em uma aba
      "TermEnter", -- Renderizar ao entrar em um terminal
      "WinEnter", -- Renderizar ao entrar em uma janela
      "CmdwinLeave", -- Renderizar ao sair do modo de comando
      "TextChanged", -- Renderizar ao alterar texto
      "VimResized", -- Renderizar ao redimensionar a janela
      "WinScrolled", -- Renderizar ao rolar a janela
    },
    clear = {
      "BufWinLeave", -- Limpar ao sair de uma janela
      "TabLeave", -- Limpar ao sair de uma aba
      "TermLeave", -- Limpar ao sair de um terminal
      "WinLeave", -- Limpar ao sair de uma janela
    },
  },

  -- Configura√ß√£o de manipuladores
  handlers = {
    cursor = true, -- Exibir posi√ß√£o do cursor
    diagnostic = true, -- Exibir diagn√≥sticos
    gitsigns = true, -- Exibir altera√ß√µes do Git (requer o plugin gitsigns)
    handle = true, -- Exibir o handle principal
    search = false, -- Exibir resultados de busca (requer o plugin hlslens)
    ale = false, -- Exibir erros do ALE (requer o plugin ALE)
  },
})

require("nvim-tree").setup({
  -- Configura√ß√£o de filtros
  filters = {
    dotfiles = false, -- N√£o exibir arquivos ocultos (dotfiles)
    git_ignored = true, -- Ocultar arquivos ignorados pelo Git
    exclude = { vim.fn.stdpath("config") .. "/lua/custom" }, -- Excluir diret√≥rios espec√≠ficos
  },

  -- Configura√ß√µes gerais
  disable_netrw = true, -- Desabilitar o netrw (explorador de arquivos padr√£o do Vim)
  hijack_netrw = true, -- Substituir o netrw pelo nvim-tree
  hijack_cursor = true, -- Centralizar o cursor ao navegar no nvim-tree
  hijack_unnamed_buffer_when_opening = false, -- N√£o sobrescrever buffers n√£o nomeados ao abrir o nvim-tree
  sync_root_with_cwd = true, -- Sincronizar o diret√≥rio raiz com o diret√≥rio atual

  -- Atualiza√ß√£o do arquivo focado
  update_focused_file = {
    enable = true, -- Atualizar o foco no arquivo atual
    update_root = false, -- N√£o atualizar o diret√≥rio raiz automaticamente
  },

  -- Configura√ß√£o de diagn√≥sticos
  diagnostics = {
    enable = true, -- Habilitar exibi√ß√£o de diagn√≥sticos
    show_on_dirs = true, -- Mostrar diagn√≥sticos em diret√≥rios
    show_on_open_dirs = true, -- Mostrar diagn√≥sticos em diret√≥rios abertos
    icons = {
      hint = "‚óº", -- √çcone para dicas
      info = "‚óº", -- √çcone para informa√ß√µes
      warning = "‚óº", -- √çcone para avisos
      error = "‚óº", -- √çcone para erros
    },
  },

  -- Configura√ß√£o da visualiza√ß√£o
  view = {
    adaptive_size = false, -- N√£o ajustar automaticamente o tamanho da janela
    side = "left", -- Exibir o nvim-tree no lado esquerdo
    width = 25, -- Largura da janela
    preserve_window_proportions = true, -- Preservar propor√ß√µes da janela
  },

  -- Configura√ß√£o de integra√ß√£o com Git
  git = {
    enable = true, -- Habilitar integra√ß√£o com Git
    ignore = true, -- Ignorar arquivos rastreados pelo Git
  },

  -- Configura√ß√£o de observadores do sistema de arquivos
  filesystem_watchers = {
    enable = true, -- Habilitar observadores para mudan√ßas no sistema de arquivos
  },

  -- Configura√ß√£o de a√ß√µes
  actions = {
    open_file = {
      resize_window = false, -- N√£o redimensionar a janela ao abrir um arquivo
    },
  },

  -- Configura√ß√£o do renderizador
  renderer = {
    root_folder_label = false, -- N√£o exibir r√≥tulo para a pasta raiz
    highlight_git = true, -- Destacar altera√ß√µes do Git
    highlight_opened_files = "none", -- N√£o destacar arquivos abertos

    -- Arquivos especiais a serem destacados
    special_files = {
      "Makefile",
      "pyproject.toml",
      "go.mod",
      "go.sum",
      "requirements.txt",
      "Dockerfile",
    },

    -- Configura√ß√£o de marcadores de indenta√ß√£o
    indent_markers = {
      enable = true, -- Habilitar marcadores de indenta√ß√£o
    },

    -- Configura√ß√£o de √≠cones
    icons = {
      show = {
        file = false, -- N√£o exibir √≠cones para arquivos
        folder = false, -- N√£o exibir √≠cones para pastas
        folder_arrow = true, -- Exibir setas para pastas
        git = false, -- N√£o exibir √≠cones para Git
      },
      glyphs = {
        default = "Û∞àö", -- √çcone padr√£o para arquivos
        symlink = "ÔíÅ", -- √çcone para links simb√≥licos
        folder = {
          default = "Óö≠", -- √çcone para pastas
          empty = "Ó™É", -- √çcone para pastas vazias
          empty_open = "ÓØü", -- √çcone para pastas vazias abertas
          open = "Ó´∂", -- √çcone para pastas abertas
          symlink = "Ó´≠", -- √çcone para links simb√≥licos de pastas
          symlink_open = "ÔíÇ", -- √çcone para links simb√≥licos de pastas abertas
          arrow_open = "Ôëº", -- √çcone para setas abertas
          arrow_closed = "Ôë†", -- √çcone para setas fechadas
        },
        git = {
          unstaged = "‚óº", -- √çcone para altera√ß√µes n√£o preparadas
          staged = "‚óº", -- √çcone para altera√ß√µes preparadas
          unmerged = "‚óº", -- √çcone para conflitos n√£o resolvidos
          renamed = "‚óº", -- √çcone para arquivos renomeados
          untracked = "‚óº", -- √çcone para arquivos n√£o rastreados
          deleted = "‚óº", -- √çcone para arquivos exclu√≠dos
          ignored = "‚óº", -- √çcone para arquivos ignorados
        },
      },
    },
  },
})

require("nvim-web-devicons").setup({
  -- Sobrescrever √≠cones padr√£o com configura√ß√µes personalizadas
  override = {
    zsh = {
      icon = "Óûï", -- √çcone para arquivos Zsh
      color = "#428850", -- Cor do √≠cone
      cterm_color = "65", -- Cor para terminais cterm
      name = "Zsh", -- Nome do √≠cone
    },
  },

  -- Habilitar cores diferentes para cada √≠cone (padr√£o: true)
  color_icons = true,

  -- Habilitar √≠cones padr√£o globalmente (padr√£o: false)
  default = true,

  -- Habilitar sele√ß√£o "estrita" de √≠cones (padr√£o: false)
  -- √çcones ser√£o buscados primeiro pelo nome do arquivo e, se n√£o encontrados, pela extens√£o
  strict = true,

  -- Sobrescrever √≠cones com base no nome do arquivo (requer `strict = true`)
  override_by_filename = {
    [".gitignore"] = {
      icon = "ÓúÇ", -- √çcone para arquivos .gitignore
      color = "#f1502f", -- Cor do √≠cone
      name = "Gitignore", -- Nome do √≠cone
    },
  },

  -- Sobrescrever √≠cones com base na extens√£o do arquivo (requer `strict = true`)
  override_by_extension = {
    ["log"] = {
      icon = "Ôêé", -- √çcone para arquivos de log
      color = "#81e043", -- Cor do √≠cone
      name = "Log", -- Nome do √≠cone
    },
  },
})

require("nvim-treesitter.configs").setup({
  -- Linguagens a serem instaladas
  ensure_installed = {
    "c", "lua", "vim", "vimdoc", "query", "markdown", "markdown_inline",
    "python", "ruby", "javascript", "arduino", "awk", "c_sharp", "cmake",
    "clojure", "asm", "cpp", "css", "csv", "dart", "dockerfile", "diff",
    "editorconfig", "erlang", "gleam", "go", "gomod", "helm", "haskell",
    "html", "htmldjango", "java", "json", "json5", "kotlin", "nasm",
    "ocaml", "ocaml_interface", "proto", "regex", "rust", "sql", "svelte",
    "toml", "typescript", "yaml", "vue", "xml",
  },

  -- Instalar parsers de forma s√≠ncrona (aplicado apenas ao `ensure_installed`)
  sync_install = false,

  -- Instalar parsers automaticamente ao abrir um buffer
  -- Recomenda√ß√£o: defina como `false` se voc√™ n√£o tiver o CLI do `tree-sitter` instalado localmente
  auto_install = true,

  -- Lista de parsers a serem ignorados durante a instala√ß√£o
  ignore_install = {},

  -- Configura√ß√£o de realce de sintaxe
  highlight = {
    enable = true, -- Habilitar realce de sintaxe com Tree-sitter

    -- Lista de linguagens para as quais o realce ser√° desabilitado
    disable = {},

    -- Executar `:h syntax` e Tree-sitter ao mesmo tempo
    -- Defina como `true` se depender do 'syntax' padr√£o (pode causar lentid√£o ou realces duplicados)
    additional_vim_regex_highlighting = false,
  },
})

require("twilight").setup({
  -- Configura√ß√£o de escurecimento
  dimming = {
    alpha = 0.25, -- N√≠vel de transpar√™ncia (0 = totalmente escuro, 1 = sem escurecimento)
    color = { "Normal", "#ffffff" }, -- Cor de fundo para o escurecimento
    inactive = false, -- N√£o escurecer janelas inativas
  },

  -- N√∫mero de linhas de contexto a serem mantidas vis√≠veis ao redor do cursor
  context = 1,

  -- Usar Treesitter para determinar o contexto (recomendado para melhor precis√£o)
  treesitter = false, -- Defina como `true` para habilitar Treesitter

  -- Tipos de blocos a serem expandidos automaticamente
  expand = {
    "function", -- Expandir fun√ß√µes
    "method",   -- Expandir m√©todos
    "table",    -- Expandir tabelas
    "if_statement", -- Expandir blocos `if`
    "class",    -- Expandir classes
  },

  -- Lista de tipos de arquivo ou buffers a serem exclu√≠dos do escurecimento
  exclude = {},
})


require("mason").setup()
require("mason-lspconfig").setup({
  ensure_installed = {
    "pyright",
    "gopls",
    "jdtls",
    "html",
    "ts_ls",
    "rust_analyzer",
    "bashls",
    "sqlls",
    "jsonls",
    "lua_ls",
  }
})


local capabilities = require('cmp_nvim_lsp').default_capabilities()

local servers = {
  'pyright',
  'gopls',
  'jdtls',
  'html',
  'ts_ls',
  'rust_analyzer',
  'bashls',
  'sqlls',
  'jsonls',
  'lua_ls',
  "django-template-lsp",
  "docker-language-server",
  "djlint",
}

for _, server in ipairs(servers) do
  vim.lsp.config[server] = {
    capabilities = capabilities
  }
end

local cmp = require('cmp')
cmp.setup({
  mapping = cmp.mapping.preset.insert({
    ['<C-b>'] = cmp.mapping.scroll_docs(-4),
    ['<C-f>'] = cmp.mapping.scroll_docs(4),
    ['<C-Space>'] = cmp.mapping.complete(),
    ['<C-e>'] = cmp.mapping.abort(),
    ['<CR>'] = cmp.mapping.confirm({ select = true }),
  }),
  sources = cmp.config.sources({
    { name = 'nvim_lsp' },
    { name = 'buffer' },
    { name = 'path' }
  })
})

-- Configura√ß√£o do DAP (Debug Adapter Protocol)
local dap = require('dap')
local dapui = require('dapui')

-- Configura√ß√£o do DAP UI
dapui.setup()

-- Configura√ß√£o do DAP para Go
require('dap-go').setup()

-- Configura√ß√£o do DAP para Python
require('dap-python').setup('~/.virtualenvs/debugpy/bin/python')


require('config.settings').setup()
require('config.keymaps').setup()